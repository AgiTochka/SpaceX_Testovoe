{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const spaceXApi = createApi({\n  reducerPath: 'spacexApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.spacexdata.com'\n  }),\n  tagTypes: [],\n  endpoints: builder => ({\n    getLaunches: builder.query({\n      query: arg => ({\n        url: '/v5/launches/query',\n        method: 'POST',\n        body: {\n          \"query\": {\n            \"success\": true,\n            \"date_utc\": {\n              \"$gte\": \"2015-01-01T00:00:00.000Z\",\n              \"$lte\": \"2019-12-31T00:00:00.000Z\"\n            }\n          },\n          \"option\": {\n            sort: {\n              \"date_local\": arg\n            },\n            limit: 25\n          }\n        }\n      }),\n      getShipsById: builder.mutation({\n        query: id => ({\n          url: `/v4/ships/${id}`,\n          method: \"GET\"\n        })\n      })\n    })\n  })\n});\nexport const {\n  useGetLaunchesQuery,\n  useGetShipsByIdQuery\n} = spaceXApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","spaceXApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getLaunches","query","arg","url","method","body","sort","limit","getShipsById","mutation","id","useGetLaunchesQuery","useGetShipsByIdQuery"],"sources":["/home/izifizik/Dev/ReactProjects/SpaceX/src/api/spaceXApi.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\n\nexport const spaceXApi = createApi({\n    reducerPath: 'spacexApi',\n    baseQuery: fetchBaseQuery({baseUrl: 'https://api.spacexdata.com'}),\n    tagTypes: [],\n    endpoints: (builder) => ({\n        getLaunches: builder.query({\n            query: (arg) => ({\n                url: '/v5/launches/query',\n                method: 'POST',\n                body: {\n                    \"query\": {\n                        \"success\": true,\n                        \"date_utc\": {\n                            \"$gte\": \"2015-01-01T00:00:00.000Z\",\n                            \"$lte\": \"2019-12-31T00:00:00.000Z\"\n                        }\n                    },\n                    \"option\":{\n                        sort: {\n                            \"date_local\": arg\n                        },\n                        limit: 25,\n                    }\n                }\n            }),\n\n            getShipsById: builder.mutation({\n                query: (id) => ({\n                    url: `/v4/ships/${id}`,\n                    method: \"GET\"\n                })\n            })\n        }),\n    }),\n})\n\nexport const {useGetLaunchesQuery, useGetShipsByIdQuery} = spaceXApi;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAEH,cAAc,CAAC;IAACI,OAAO,EAAE;EAA4B,CAAC,CAAC;EAClEC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAGC,OAAO,KAAM;IACrBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACvBA,KAAK,EAAGC,GAAG,KAAM;QACbC,GAAG,EAAE,oBAAoB;QACzBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UACF,OAAO,EAAE;YACL,SAAS,EAAE,IAAI;YACf,UAAU,EAAE;cACR,MAAM,EAAE,0BAA0B;cAClC,MAAM,EAAE;YACZ;UACJ,CAAC;UACD,QAAQ,EAAC;YACLC,IAAI,EAAE;cACF,YAAY,EAAEJ;YAClB,CAAC;YACDK,KAAK,EAAE;UACX;QACJ;MACJ,CAAC,CAAC;MAEFC,YAAY,EAAET,OAAO,CAACU,QAAQ,CAAC;QAC3BR,KAAK,EAAGS,EAAE,KAAM;UACZP,GAAG,EAAG,aAAYO,EAAG,EAAC;UACtBN,MAAM,EAAE;QACZ,CAAC;MACL,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAACO,mBAAmB;EAAEC;AAAoB,CAAC,GAAGnB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
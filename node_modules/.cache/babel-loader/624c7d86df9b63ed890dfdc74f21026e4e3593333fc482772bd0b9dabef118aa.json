{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const spaceXApi = createApi({\n  reducerPath: 'spacexApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.spacexdata.com'\n  }),\n  tagTypes: [],\n  endpoints: builder => ({\n    getLaunches: builder.query({\n      query: () => ({\n        requests: {\n          launches: arg => ({\n            url: '/v5/launches/query',\n            method: 'POST',\n            body: {\n              \"query\": {\n                \"success\": true,\n                \"date_utc\": {\n                  \"$gte\": \"2015-01-01T00:00:00.000Z\",\n                  \"$lte\": \"2019-12-31T00:00:00.000Z\"\n                }\n              },\n              \"options\": {\n                \"sort\": {\n                  \"date_local\": arg\n                },\n                \"limit\": 250\n              }\n            }\n          }),\n          shisp: id => ({\n            url: `/v4/ships/${id}`,\n            method: \"GET\"\n          })\n        }\n      })\n    })\n  })\n});\nexport const {\n  useGetLaunchesQuery,\n  useGetShipsByIdQuery\n} = spaceXApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","spaceXApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getLaunches","query","requests","launches","arg","url","method","body","shisp","id","useGetLaunchesQuery","useGetShipsByIdQuery"],"sources":["/home/izifizik/Dev/ReactProjects/SpaceX/src/api/spaceXApi.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\n\nexport const spaceXApi = createApi({\n    reducerPath: 'spacexApi',\n    baseQuery: fetchBaseQuery({baseUrl: 'https://api.spacexdata.com'}),\n    tagTypes: [],\n    endpoints: (builder) => ({\n        getLaunches: builder.query({\n            query: () => ({\n                requests:{\n                    launches: (arg) => ({\n                        url: '/v5/launches/query',\n                            method: 'POST',\n                            body: {\n                            \"query\": {\n                                \"success\": true,\n                                    \"date_utc\": {\n                                    \"$gte\": \"2015-01-01T00:00:00.000Z\",\n                                        \"$lte\": \"2019-12-31T00:00:00.000Z\"\n                                }\n                            },\n                            \"options\":{\n                                \"sort\": {\n                                    \"date_local\": arg\n                                },\n                                \"limit\": 250,\n                            }\n                        }\n                    }),\n                    shisp:(id) => ({\n                        url: `/v4/ships/${id}`,\n                        method: \"GET\"\n                    })\n                }\n\n            }),\n        }),\n    }),\n})\n\nexport const {useGetLaunchesQuery, useGetShipsByIdQuery} = spaceXApi;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAEH,cAAc,CAAC;IAACI,OAAO,EAAE;EAA4B,CAAC,CAAC;EAClEC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAGC,OAAO,KAAM;IACrBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACvBA,KAAK,EAAEA,CAAA,MAAO;QACVC,QAAQ,EAAC;UACLC,QAAQ,EAAGC,GAAG,KAAM;YAChBC,GAAG,EAAE,oBAAoB;YACrBC,MAAM,EAAE,MAAM;YACdC,IAAI,EAAE;cACN,OAAO,EAAE;gBACL,SAAS,EAAE,IAAI;gBACX,UAAU,EAAE;kBACZ,MAAM,EAAE,0BAA0B;kBAC9B,MAAM,EAAE;gBAChB;cACJ,CAAC;cACD,SAAS,EAAC;gBACN,MAAM,EAAE;kBACJ,YAAY,EAAEH;gBAClB,CAAC;gBACD,OAAO,EAAE;cACb;YACJ;UACJ,CAAC,CAAC;UACFI,KAAK,EAAEC,EAAE,KAAM;YACXJ,GAAG,EAAG,aAAYI,EAAG,EAAC;YACtBH,MAAM,EAAE;UACZ,CAAC;QACL;MAEJ,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAACI,mBAAmB;EAAEC;AAAoB,CAAC,GAAGlB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
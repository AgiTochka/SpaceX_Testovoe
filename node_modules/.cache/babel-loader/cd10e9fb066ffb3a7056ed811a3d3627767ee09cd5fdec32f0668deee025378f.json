{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const spaceXApi = createApi({\n  reducerPath: 'spacexApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.spacexdata.com'\n  }),\n  tagTypes: [],\n  endpoints: builder => ({\n    getLaunches: builder.query({\n      query: () => ({\n        url: '/v5/launches/query',\n        method: 'POST',\n        body: {\n          \"query\": {\n            \"success\": true,\n            \"date_utc\": {\n              \"$gte\": \"2015-01-01T00:00:00.000Z\",\n              \"$lte\": \"2019-12-31T00:00:00.000Z\"\n            }\n          }\n        }\n      }),\n      extraOptions: arg => ({\n        sort: {\n          \"date_utc\": arg\n        }\n      }),\n      getShipsById: builder.mutation({\n        query: id => ({\n          url: `/v4/ships/${id}`,\n          method: \"GET\"\n        })\n      })\n    })\n  })\n});\nexport const {\n  useGetLaunchesQuery,\n  useGetShipsByIdQuery\n} = spaceXApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","spaceXApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getLaunches","query","url","method","body","extraOptions","arg","sort","getShipsById","mutation","id","useGetLaunchesQuery","useGetShipsByIdQuery"],"sources":["/home/izifizik/Dev/ReactProjects/SpaceX/src/api/spaceXApi.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\n\nexport const spaceXApi = createApi({\n    reducerPath: 'spacexApi',\n    baseQuery: fetchBaseQuery({baseUrl: 'https://api.spacexdata.com'}),\n    tagTypes: [],\n    endpoints: (builder) => ({\n        getLaunches: builder.query({\n            query: () => ({\n                url: '/v5/launches/query',\n                method: 'POST',\n                body: {\n                    \"query\": {\n                        \"success\": true,\n                        \"date_utc\": {\n                            \"$gte\": \"2015-01-01T00:00:00.000Z\",\n                            \"$lte\": \"2019-12-31T00:00:00.000Z\"\n                        }\n                    },\n                }\n            }),\n            extraOptions: (arg) => ({\n                sort: {\n                    \"date_utc\": arg\n                }\n            }),\n\n            getShipsById: builder.mutation({\n                query: (id) => ({\n                    url: `/v4/ships/${id}`,\n                    method: \"GET\"\n                })\n            })\n        }),\n    }),\n})\n\nexport const {useGetLaunchesQuery, useGetShipsByIdQuery} = spaceXApi;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAEH,cAAc,CAAC;IAACI,OAAO,EAAE;EAA4B,CAAC,CAAC;EAClEC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAGC,OAAO,KAAM;IACrBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACvBA,KAAK,EAAEA,CAAA,MAAO;QACVC,GAAG,EAAE,oBAAoB;QACzBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UACF,OAAO,EAAE;YACL,SAAS,EAAE,IAAI;YACf,UAAU,EAAE;cACR,MAAM,EAAE,0BAA0B;cAClC,MAAM,EAAE;YACZ;UACJ;QACJ;MACJ,CAAC,CAAC;MACFC,YAAY,EAAGC,GAAG,KAAM;QACpBC,IAAI,EAAE;UACF,UAAU,EAAED;QAChB;MACJ,CAAC,CAAC;MAEFE,YAAY,EAAET,OAAO,CAACU,QAAQ,CAAC;QAC3BR,KAAK,EAAGS,EAAE,KAAM;UACZR,GAAG,EAAG,aAAYQ,EAAG,EAAC;UACtBP,MAAM,EAAE;QACZ,CAAC;MACL,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAACQ,mBAAmB;EAAEC;AAAoB,CAAC,GAAGnB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}